import Head from 'next/head'
import { FaSearch } from "react-icons/fa"
import { useState } from 'react'

import styles from '../styles/Redirect.module.css'
import Track from '../components/Track'

export default function Redirect() {

  const [searchTerm, setSearchTerm] = useState('')
  const [artistsList, setArtistsList] = useState([])
  const [albumList, setAlbumList] = useState([])
  const [playlistList, setPlaylistList] = useState([])
  const [showArtist, setShowArtist] = useState(true)
  const [showAlbum, setShowAlbum] = useState(false)
  const [showPlaylist, setShowPlaylist] = useState(false)
  const [buttonV, setButtonV] = useState(false)

  const getToken = () => { 
    var hashParams = {};
    var e, r = /([^&;=]+)=?([^&;]*)/g,
    q = window.location.hash.substring(1);
    e = r.exec(q)
    while (e) {
    hashParams[e[1]] = decodeURIComponent(e[2]);
    e = r.exec(q);
    }
    return(hashParams)
  }

  const handleOnKeyDown = (e) => {
    if (e.key === 13 || e.key === 'Enter') {
      handleSearch()
    }

  }

  const handleSearch = async () => {
    setButtonV(true)
    const params = getToken()
    const token = params.access_token
    console.log(token)

    const response = await fetch(`https://api.spotify.com/v1/search?query=${searchTerm}&type=album,playlist,artist,track`, {
      headers: {
        Authorization: `Bearer ${token}`
      }
    })
    const json = await response.json()
    console.log(json.tracks.items)
    setArtistsList(json.artists.items)
    setAlbumList(json.albums.items)
    setPlaylistList(json.playlists.items)
  }

  const hadleShowArtist = () => {
    if (showArtist === true) {
      setShowArtist(false)
    } else {
      setShowArtist(true)
      setShowPlaylist(false)
      setShowAlbum(false)
    }
  }
  const hadleShowAlbum = () => {
    if (showAlbum === true) {
      setShowAlbum(false)
    } else {
      setShowAlbum(true)
      setShowArtist(false)
      setShowPlaylist(false)
    }
  }
  const hadleShowPlaylist = () => {
    if (showPlaylist === true) {
      setShowPlaylist(false)
    } else {
      setShowPlaylist(true)
      setShowArtist(false)
      setShowAlbum(false)
    }
  }


  return (
    <div className={styles.container}>
      <Head>
        <title>Music Finder</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Bem vindo(a) ao <strong>Music Finder</strong>
        </h1>
        <div className={styles.input_container}>
          <input type="text" placeholder="Artistas, √°lbuns ou playlists" onChange={e=> setSearchTerm(e.target.value)} value={searchTerm} onKeyDown={handleOnKeyDown}/>
          <button onClick={handleSearch}><FaSearch /></button>
        </div>
        
        {buttonV === true ? (
          <div>
            <button onClick={hadleShowArtist} className={styles.button}>Artistas</button>
            <button onClick={hadleShowAlbum} className={styles.button}>√Ålbuns</button>
            <button onClick={hadleShowPlaylist} className={styles.button}>Playlists</button>
          </div>
        ): null}

        
        {showArtist === true ? (
          <div className={styles.track_container} >
            {artistsList.map(artist=> <Track track={artist} key={artist.id}/>)}
          </div>
        ): null}
        
        {showAlbum === true ? (
        <div className={styles.track_container}>
          {albumList.map(album=> <Track track={album} key={album.id}/>)}
        </div>
        ): null}

        {showPlaylist === true ? (
        <div className={styles.track_container}>
          {playlistList.map(playlist=> <Track track={playlist} key={playlist.id}/>)}
        </div>
        ): null}
      </main>

      <footer className={styles.footer}>
        Feito com üíô por Bruno Coutinho
      </footer>
    </div>
  )
}